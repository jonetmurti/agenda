name: Run Test
on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18]
        database: [
          {
            dialect: "postgres",
            address: "postgres://postgres:postgres@localhost:5432/agenda_db"
          }
        ]
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: ${{ matrix.database.dialect }}
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # - name: Start MongoDB
      #   uses: supercharge/mongodb-github-action@1.6.0
      #   with:
      #     mongodb-version: ${{ matrix.mongodb-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-agenda-${{ hashFiles('**/package-lock.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-agenda-

      - name: Update npm
        run: npm -g install npm@latest

      - name: Install Packages
        run: npm install

      - name: Run Lint
        run: npm run lint

      - name: Build
        run: npm run build
        env:
          CI: true

      - name: Test
        run: npm run test
        env:
          CI: true
          CI_DB_DIALECT: ${{ matrix.database.dialect }}
          CI_DB_ADDRESS: ${{ matrix.database.address }}
